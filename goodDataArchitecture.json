{
  "questions": [
    {"correctAnswer": "Architecture is leadership", "question": "Which principle is violated if an organization enforces one tech for all domains?", "answers": ["Plan for failure", "Always be architecting", "Architecture is leadership", "Choose common components wisely"]},
    {"correctAnswer": "Restricts domain-specific flexibility", "question": "What is a downside of enforcing common components indiscriminately?", "answers": ["Restricts domain-specific flexibility", "Encourages innovation", "Enhances interoperability", "Increases team autonomy"]},
    {"correctAnswer": "Careful evaluation and reversible choices", "question": "What characterizes a well-designed architecture in terms of decision-making?", "answers": ["Irreversible, top-down decisions", "Quick wins over long-term impact", "Vendor-locked solutions", "Careful evaluation and reversible choices"]},
    {"correctAnswer": "Minimal dependencies for better flexibility", "question": "What is emphasized by the principle \"Build loosely coupled systems\"?", "answers": ["Common error-handling mechanisms", "Minimal dependencies for better flexibility", "Tight integration of services", "High interdependency for better performance"]},
    {"correctAnswer": "Architecture is leadership – combining technical vision with mentorship", "question": "A data engineering team is split between adopting a cutting-edge but unfamiliar tool and sticking with a legacy system. Some team members feel uncertain about the risks and long-term impact. The architect steps in—not to dictate a choice—but to guide the team through trade-off analysis, encourage experimentation, and align the decision with organizational goals. Which principle does this architect's approach best illustrate?", "answers": ["Always be architecting – to continually revise technology choices", "Choose common components wisely – to ensure standardization", "Architecture is leadership – combining technical vision with mentorship", "Make reversible decisions – to reduce the cost of experimentation"]},
    {"correctAnswer": "Scale to zero", "question": "What term describes the approach of shutting down unused systems to save costs?", "answers": ["Plan for failure", "DataOps", "Scale to zero", "Architecture is leadership"]},
    {"correctAnswer": "Enable reversible and flexible decisions", "question": "What is the purpose of using \"two-way doors\" in decision-making?", "answers": ["Avoid failure", "Enhance data accuracy", "Enable reversible and flexible decisions", "Increase system cost"]},
    {"correctAnswer": "Data Architect", "question": "What role should data engineers aspire to?", "answers": ["UI Designer", "Network Administrator", "System Analyst", "Data Architect"]},
    {"correctAnswer": "Build loosely coupled systems", "question": "Which principle best aligns with microservice-based architecture?", "answers": ["Choose common components wisely", "Make reversible decisions", "Build loosely coupled systems", "Plan for failure"]},
    {"correctAnswer": "Technical limit", "question": "What type of trade-off involves choosing between latency and reliability?", "answers": ["Practical constraint", "Organizational trade-off", "Technical limit", "Business goal"]},
    {"correctAnswer": "Support evolving data needs of an enterprise", "question": "What is the main goal of data architecture?", "answers": ["Speed up network performance", "Design user interfaces", "Support evolving data needs of an enterprise", "Minimize hardware cost"]},
    {"correctAnswer": "Make reversible decisions", "question": "Which principle directly supports agile methodologies in architecture?", "answers": ["Plan for failure", "Build loosely coupled systems", "Make reversible decisions", "Architecture is leadership"]},
    {"correctAnswer": "Enterprise architecture", "question": "Data architecture is considered a subset of which broader architecture?", "answers": ["Enterprise architecture", "Application architecture", "Software architecture", "Business architecture"]},
    {"correctAnswer": "Continuous architectural evaluation and improvement", "question": "What does the \"Always be architecting\" principle imply?", "answers": ["One-time design is enough", "Avoid making changes once deployed", "Continuous architectural evaluation and improvement", "Only architects should make decisions"]},
    {"correctAnswer": "Plan for failure", "question": "Which principle encourages designing systems to tolerate failures?", "answers": ["Choose common components wisely", "Architect for scalability", "Always be architecting", "Plan for failure"]},
    {"correctAnswer": "Prioritizes financial accountability in cloud operations", "question": "How does \"Embrace FinOps\" influence architectural decisions?", "answers": ["Reduces security constraints", "Encourages overprovisioning", "Prioritizes financial accountability in cloud operations", "Promotes decentralization"]},
    {"correctAnswer": "To adapt to changing business and tech needs", "question": "Why is flexibility emphasized in data architecture?", "answers": ["To support batch processing", "To adapt to changing business and tech needs", "To reduce programming effort", "To enhance visualization"]},
    {"correctAnswer": "Supports flexibility and considers trade-offs in decision-making", "question": "Which of the following best describes a key characteristic of good data architecture?", "answers": ["Is only applicable to small data systems", "Focuses solely on hardware design", "Supports flexibility and considers trade-offs in decision-making", "Makes decisions without evaluating trade-offs"]},
    {"correctAnswer": "Prioritize security – to ensure compliance and protect sensitive data", "question": "A healthcare data platform must comply with strict regulations such as HIPAA. The architecture team is choosing between a fast-to-deploy solution offered by a single vendor and a slightly more complex multi-vendor setup with proven encryption, access control, and audit trail features. Which principle should guide the decision to ensure regulatory compliance and long-term risk mitigation?", "answers": ["Build loosely coupled systems – to increase integration flexibility", "Make reversible decisions – to allow future vendor switching", "Embrace FinOps – to reduce upfront cloud costs", "Prioritize security – to ensure compliance and protect sensitive data"]},
    {"correctAnswer": "Through redundancy and recovery planning", "question": "How does \"Plan for failure\" improve system reliability?", "answers": ["By scaling down resources", "Through redundancy and recovery planning", "By reducing processing time", "By encouraging complex dependencies"]},
    {"correctAnswer": "Use \"scale to zero\" to shut down resources completely when idle", "question": "A cloud-based analytics platform experiences irregular workloads, with high activity during business hours and near-zero usage overnight. Which architectural strategy would best support cost efficiency in this scenario?", "answers": ["Pre-allocate maximum resources to avoid delays", "Use \"scale to zero\" to shut down resources completely when idle", "Migrate workloads to real-time streaming", "Maintain a constant minimal compute baseline"]},
    {"correctAnswer": "Choose common components wisely", "question": "Which principle advocates choosing widely used components?", "answers": ["Prioritize security", "Embrace FinOps", "Build loosely coupled systems", "Choose common components wisely"]},
    {"correctAnswer": "Build loosely coupled systems", "question": "Which principle's failure would lead to cascading service breakdowns?", "answers": ["Choose common components wisely", "Embrace FinOps", "Build loosely coupled systems", "Make reversible decisions"]},
    {"correctAnswer": "Irreversible or expensive to reverse decisions", "question": "What is a \"one-way door\" decision in data architecture?", "answers": ["Temporary workaround", "Easily reversible decision", "Irreversible or expensive to reverse decisions", "A type of data pipeline"]}
  ]
}