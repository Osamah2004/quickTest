{
  "questions": [
    {"correctAnswer": "Output of design process","question": "What is software design as a product?","answers":["Output of design process", "Input to coding phase", "User manual", "Test plan"]},
    {"correctAnswer": "Approach to doing design","question": "What is software design as a process?","answers":["Writing code", "Approach to doing design", "Creating test cases", "Documenting requirements"]},
    {"correctAnswer": "Spiral model","question": "Which software life cycle model is risk-driven?","answers":["Waterfall model", "Spiral model", "Prototyping model", "Agile model"]},
    {"correctAnswer": "Software requirements specification","question": "What is the primary input to software design?","answers":["Test cases", "Software requirements specification", "User interface mockups", "Hardware specifications"]},
    {"correctAnswer": "Architectural Design","question": "Which phase structures the system into components and defines interfaces?","answers":["Detailed Design", "Coding", "Architectural Design", "Testing"]},
    {"correctAnswer": "Detailed Design","question": "Which phase defines internal logic and data structures?","answers":["Requirements Analysis", "Architectural Design", "Detailed Design", "Integration Testing"]},
    {"correctAnswer": "Evolutionary prototype","question": "Which type of prototype evolves into the production system?","answers":["Throwaway prototype", "Evolutionary prototype", "Mockup prototype", "Paper prototype"]},
    {"correctAnswer": "Information hiding","question": "Which design concept emphasizes encapsulating data structures within objects?","answers":["Inheritance", "Information hiding", "Polymorphism", "Coupling"]},
    {"correctAnswer": "Concurrent system with timing deadlines","question": "What defines a real-time system?","answers":["Sequential program execution", "Concurrent system with timing deadlines", "Single-threaded application", "Batch processing system"]},
    {"correctAnswer": "Finite State Machine","question": "Which concept is used to model state-dependent systems?","answers":["Data Flow Diagram", "Finite State Machine", "Structure Chart", "Class Diagram"]},
    {"correctAnswer": "Inception, Elaboration, Construction, Transition","question": "What are the phases in the Unified Process?","answers":["Analysis, Design, Implementation, Testing", "Inception, Elaboration, Construction, Transition", "Planning, Modeling, Construction, Deployment", "Requirements, Architecture, Development, Maintenance"]},
    {"correctAnswer": "Functional module","question": "What is the primary design concept in Structured Design?","answers":["Object", "Functional module", "Task", "Service"]},
    {"correctAnswer": "Objects and Classes","question": "Which of these is NOT a software design activity?","answers":["Architectural Design", "Detailed Design", "Objects and Classes", "Interface Specification"]},
    {"correctAnswer": "Waterfall model","question": "Which model does NOT show iteration between phases?","answers":["Spiral model", "Waterfall model", "Unified Process", "Agile model"]},
    {"correctAnswer": "Analyzing risks","question": "What is the second quadrant activity in the Spiral Model?","answers":["Defining objectives", "Analyzing risks", "Developing product", "Planning next cycle"]},
    {"correctAnswer": "Design notation","question": "What term describes UML in the context of software design?","answers":["Design strategy", "Design notation", "Design concept", "Design method"]},
    {"correctAnswer": "Component interfaces","question": "What does architectural design primarily specify?","answers":["Algorithm details", "Database schemas", "Component interfaces", "User manual content"]},
    {"correctAnswer": "Trade-offs in design","question": "What makes software design a 'wicked problem'?","answers":["Complex mathematics", "Trade-offs in design", "Hardware limitations", "Programming language syntax"]},
    {"correctAnswer": "Environmental constraints","question": "Which factor can limit design choices besides requirements?","answers":["Developer preferences", "Environmental constraints", "Code comments", "Variable names"]},
    {"correctAnswer": "Design rationale","question": "What documents the reasons behind design decisions?","answers":["Test cases", "Design rationale", "User stories", "Code implementation"]},
    {"correctAnswer": "Transform Analysis","question": "Which strategy converts data flow diagrams to structure charts?","answers":["Object Modeling", "Transform Analysis", "State Transition", "Use Case Realization"]},
    {"correctAnswer": "Module cohesion","question": "What measures unity within a module?","answers":["Module coupling", "Module cohesion", "Class inheritance", "Object polymorphism"]},
    {"correctAnswer": "Central Transform","question": "In Structured Design, what processes logical inputs to outputs?","answers":["Input Module", "Output Module", "Central Transform", "Database Module"]},
    {"correctAnswer": "Design method","question": "What provides systematic steps for creating a design?","answers":["Design concept", "Design method", "Design notation", "Design pattern"]},
    {"correctAnswer": "True","question": "Software design is considered a 'wicked problem' because there is no single correct solution.","answers": ["True", "False"]},
    {"correctAnswer": "False","question": "The waterfall model shows iteration between phases clearly.","answers": ["True", "False"]},
    {"correctAnswer": "True","question": "Throwaway prototyping helps validate requirements early in the life cycle.","answers": ["True", "False"]},
    {"correctAnswer": "False","question": "The Unified Process is a linear development methodology.","answers": ["True", "False"]},
    {"correctAnswer": "True","question": "A subclass inherits attributes and operations from its superclass in OO design.","answers": ["True", "False"]},
    {"correctAnswer": "False","question": "Detailed design occurs before architectural design in the software life cycle.","answers": ["True", "False"]},
    {"correctAnswer": "True","question": "Environmental constraints can influence software design decisions.","answers": ["True", "False"]},
    {"correctAnswer": "False","question": "Structured Design uses objects as its primary design concept.","answers": ["True", "False"]},
    {"correctAnswer": "True","question": "The spiral model combines prototyping with systematic aspects of waterfall.","answers": ["True", "False"]},
    {"correctAnswer": "False","question": "Information hiding increases coupling between software components.","answers": ["True", "False"]},
    {"correctAnswer": "True","question": "Design constraints may include required hardware platforms.","answers": ["True", "False"]},
    {"correctAnswer": "False","question": "Software maintenance never requires redesign of the system.","answers": ["True", "False"]},
    {"correctAnswer": "True","question": "Concurrent systems have multiple threads of execution.","answers": ["True", "False"]},
    {"correctAnswer": "False","question": "Finite State Machines have infinite possible states.","answers": ["True", "False"]},
    {"correctAnswer": "True","question": "The Elaboration phase in UP defines the software architecture.","answers": ["True", "False"]},
    {"correctAnswer": "False","question": "Structured Design is primarily used for object-oriented systems.","answers": ["True", "False"]},
    {"correctAnswer": "True","question": "Design structuring criteria help decompose systems into parts.","answers": ["True", "False"]},
    {"correctAnswer": "False","question": "Design concepts are the same as programming language syntax.","answers": ["True", "False"]},
    {"correctAnswer": "True","question": "Real-time systems must meet timing deadlines.","answers": ["True", "False"]},
    {"correctAnswer": "False","question": "All prototypes should evolve into production systems.","answers": ["True", "False"]},
    {"correctAnswer": "True","question": "The Transition phase in UP involves handing the system to users.","answers": ["True", "False"]},
    {"correctAnswer": "False","question": "Module coupling measures unity within a single module.","answers": ["True", "False"]},
    {"correctAnswer": "True","question": "Design notations can be both graphical and textual.","answers": ["True", "False"]},
    {"correctAnswer": "False","question": "Input modules in Structured Design process logical outputs.","answers": ["True", "False"]},
    {"correctAnswer": "True","question": "A state represents a situation that persists over time.","answers": ["True", "False"]},
    {"correctAnswer": "False","question": "Events in state machines persist over intervals of time.","answers": ["True", "False"]},
    {"correctAnswer": "True","question": "The Construction phase in UP focuses on building the software.","answers": ["True", "False"]},
    {"correctAnswer": "False","question": "Design methods are independent of design concepts.","answers": ["True", "False"]},
    {"correctAnswer": "True","question": "Objects encapsulate both data and operations.","answers": ["True", "False"]},
    {"correctAnswer": "False","question": "The Inception phase in UP involves full system development.","answers": ["True", "False"]},
    {"correctAnswer": "True","question": "Transform Analysis identifies central processing functions.","answers": ["True", "False"]},
    {"correctAnswer": "False","question": "High module coupling is desirable in software design.","answers": ["True", "False"]},
    {"correctAnswer": "True","question": "Design strategies provide overall plans for performing design.","answers": ["True", "False"]},
    {"correctAnswer": "False","question": "Software design only considers functional requirements.","answers": ["True", "False"]},
    {"correctAnswer": "True","question": "The same user can play multiple actor roles in a system.","answers": ["True", "False"]},
    {"correctAnswer": "False","question": "Design constraints never include anticipated system changes.","answers": ["True", "False"]}
  ]
}
