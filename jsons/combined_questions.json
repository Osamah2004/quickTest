{
  "questions": [
    {
      "correctAnswer": "Merge metadata logs for NameNode",
      "question": "What is the role of the Secondary NameNode?",
      "answers": [
        "Store additional data copies",
        "Replace NameNode in failure",
        "Merge metadata logs for NameNode",
        "Handle MapReduce tasks"
      ]
    },
    {
      "correctAnswer": "Handle distributed storage and batch processing",
      "question": "What is the role of Hadoop in data engineering?",
      "answers": [
        "Visualize dashboards",
        "Manage web traffic",
        "Handle distributed storage and batch processing",
        "Encrypt emails"
      ]
    },
    {
      "correctAnswer": "Converts input into key-value pairs",
      "question": "What does Map function in MapReduce do?",
      "answers": [
        "Compresses files",
        "Converts input into key-value pairs",
        "Aggregates values",
        "Joins tables"
      ]
    },
    {
      "correctAnswer": "Extend storage capacity for real-time queries",
      "question": "What is a common integration use of Hadoop with NoSQL?",
      "answers": [
        "Replace all RDBMS systems",
        "Create data silos",
        "Extend storage capacity for real-time queries",
        "Generate schema-on-read interfaces"
      ]
    },
    {
      "correctAnswer": "Very large and complex datasets",
      "question": "What does the term \"Big Data\" generally refer to?",
      "answers": [
        "Very large and complex datasets",
        "Backup files",
        "Corporate intranet",
        "High-speed internet"
      ]
    },
    {
      "correctAnswer": "Aggregates intermediate key-value pairs",
      "question": "What does the Reduce function do in MapReduce?",
      "answers": [
        "Filters output",
        "Formats data",
        "Aggregates intermediate key-value pairs",
        "Schedules tasks"
      ]
    },
    {
      "correctAnswer": "Hadoop Distributed File System",
      "question": "What does HDFS stand for?",
      "answers": [
        "High Data Federation Storage",
        "Hadoop Data Flow Schema",
        "Hybrid Data Format System",
        "Hadoop Distributed File System"
      ]
    },
    {
      "correctAnswer": "Apache Spark Structured Streaming",
      "question": "Which platform supports near real-time micro-batching?",
      "answers": [
        "Hadoop MapReduce",
        "Apache Flink",
        "Apache Spark Structured Streaming",
        "Hive"
      ]
    },
    {
      "correctAnswer": "Manage metadata and block mapping",
      "question": "What is the main function of the NameNode in HDFS?",
      "answers": [
        "Perform data compression",
        "Execute SQL queries",
        "Manage metadata and block mapping",
        "Store data blocks"
      ]
    },
    {
      "correctAnswer": "MapReduce",
      "question": "Which is a core component of Apache Hadoop?",
      "answers": [
        "Cassandra",
        "Apache Kafka",
        "MapReduce",
        "PostgreSQL"
      ]
    },
    {
      "correctAnswer": "It includes diverse data types like logs, media, and sensor data across formats",
      "question": "Which statement best describes the nature of data handled in Big Data environments?",
      "answers": [
        "It is restricted to formats compatible with SQL querying",
        "It primarily involves encrypted transactional data",
        "It consists mostly of structured records stored in relational databases",
        "It includes diverse data types like logs, media, and sensor data across formats"
      ]
    },
    {
      "correctAnswer": "Unsuitable for random writes",
      "question": "What is a key limitation of HDFS?",
      "answers": [
        "Limited to small datasets",
        "High latency",
        "Unsuitable for random writes",
        "Poor data security"
      ]
    },
    {
      "correctAnswer": "Validation",
      "question": "Which of the following is an incorrect characteristic commonly associated with the 5 Vs of Big Data?",
      "answers": [
        "Velocity",
        "Volume",
        "Validation",
        "Variety"
      ]
    },
    {
      "correctAnswer": "YARN",
      "question": "What tool is used for cluster resource management in Hadoop?",
      "answers": [
        "YARN",
        "Spark",
        "HBase",
        "Hive"
      ]
    },
    {
      "correctAnswer": "Write-once, read-many",
      "question": "Which storage pattern is encouraged by HDFS?",
      "answers": [
        "Read-write frequently",
        "Write-once, read-many",
        "Write-many, read-once",
        "Append and replace"
      ]
    },
    {
      "correctAnswer": "It introduces high latency due to batch-oriented processing",
      "question": "Why is MapReduce a poor fit for real-time fraud detection?",
      "answers": [
        "It introduces high latency due to batch-oriented processing",
        "Its programming model is overly simplistic for complex analysis",
        "It performs excessive join operations during data aggregation",
        "It is too inexpensive for enterprise-scale deployments"
      ]
    },
    {
      "correctAnswer": "Data replication across nodes",
      "question": "How does HDFS achieve fault tolerance?",
      "answers": [
        "Low-latency access",
        "Data replication across nodes",
        "File encryption",
        "Load balancing"
      ]
    },
    {
      "correctAnswer": "Real-time streaming",
      "question": "Which Big Data processing mode is best for fraud detection?",
      "answers": [
        "Scheduled jobs",
        "Micro-batch",
        "Batch",
        "Real-time streaming"
      ]
    },
    {
      "correctAnswer": "Batch processing",
      "question": "What type of processing is MapReduce designed for?",
      "answers": [
        "Event-driven tasks",
        "Real-time streaming",
        "Batch processing",
        "Data visualization"
      ]
    },
    {
      "correctAnswer": "The reliability and trustworthiness of the data",
      "question": "What is Veracity in the 5 Vs of Big Data?",
      "answers": [
        "The structural complexity of the data schema",
        "The rate at which data must be processed",
        "The reliability and trustworthiness of the data",
        "The degree of integration between different data sources"
      ]
    },
    {
      "correctAnswer": "High latency from block-based access",
      "question": "Why is HDFS unsuitable for small, random reads?",
      "answers": [
        "Schema restrictions",
        "Low security",
        "Poor visualization tools",
        "High latency from block-based access"
      ]
    },
    {
      "correctAnswer": "The return on investment gained from data-driven actions",
      "question": "What does \"Value\" represent in the 5 Vs of Big Data?",
      "answers": [
        "The operational cost of storing and managing large datasets",
        "The return on investment gained from data-driven actions",
        "The monetary worth of data assets on the balance sheet",
        "The budget allocation for big data infrastructure"
      ]
    },
    {
      "correctAnswer": "IoT sensor data monitoring",
      "question": "What is an example of a real-time streaming use case?",
      "answers": [
        "Monthly report generation",
        "Year-end analytics",
        "IoT sensor data monitoring",
        "Log archival"
      ]
    },
    {
      "correctAnswer": "3",
      "question": "What is the default replication factor in HDFS?",
      "answers": [
        "3",
        "5",
        "2",
        "10"
      ]
    },
    {
      "correctAnswer": "The variety, volume, and analytical use cases of the data",
      "question": "Which factor most critically informs the choice between a data lake, data warehouse, or data lakehouse?",
      "answers": [
        "The team's preference for SQL-based querying",
        "The need to avoid vendor lock-in",
        "The variety, volume, and analytical use cases of the data",
        "The organization's tolerance for data redundancy"
      ]
    },
    {
      "correctAnswer": "Flexible format support with ACID guarantees",
      "question": "What best describes a data lakehouse's storage approach?",
      "answers": [
        "Only supports SQL",
        "Strictly schema-based",
        "Flexible format support with ACID guarantees",
        "Write-once memory"
      ]
    },
    {
      "correctAnswer": "Snowflake",
      "question": "Which of the following is a modern cloud-based data warehouse?",
      "answers": [
        "SQLite",
        "PostgreSQL",
        "Snowflake",
        "Oracle"
      ]
    },
    {
      "correctAnswer": "Serving specific business departments",
      "question": "What are Data Marts used for?",
      "answers": [
        "Retail marketing",
        "Storing unstructured data",
        "Encrypting sensitive data",
        "Serving specific business departments"
      ]
    },
    {
      "correctAnswer": "Support for both raw data processing and structured analytics",
      "question": "What makes Data Lakehouses suitable for both data science and business intelligence (BI)?",
      "answers": [
        "Support for both raw data processing and structured analytics",
        "Optimized for OLTP-style workloads",
        "Strict schema enforcement and strong indexing",
        "Separation of storage and compute only for unstructured data"
      ]
    },
    {
      "correctAnswer": "WORN",
      "question": "What is the term for write-once, read-never data?",
      "answers": [
        "WORN",
        "Cold storage",
        "Data cube",
        "Data lakehouse"
      ]
    },
    {
      "correctAnswer": "Data governance and discoverability",
      "question": "What issue did Data Lake 1.0 technologies fail to address adequately?",
      "answers": [
        "Real-time processing",
        "Encryption at rest",
        "Data science integrations",
        "Data governance and discoverability"
      ]
    },
    {
      "correctAnswer": "Plug-and-play cloud tools",
      "question": "Why is the modern data stack considered agile?",
      "answers": [
        "Monolithic structure",
        "Offline-only capabilities",
        "Plug-and-play cloud tools",
        "Fixed design templates"
      ]
    },
    {
      "correctAnswer": "ELT performs transformations after loading, using the target system's transformation capabilities",
      "question": "Compared to the traditional ETL process, why is ELT better suited for modern cloud data architectures?",
      "answers": [
        "ELT reduces the need for data pipelines by eliminating ingestion",
        "ELT performs transformations after loading, using the target system's transformation capabilities",
        "ELT processes data before it enters the storage system",
        "ELT avoids schema enforcement, making it faster for structured data"
      ]
    },
    {
      "correctAnswer": "Scalability and cost efficiency",
      "question": "What makes cloud data warehouses attractive?",
      "answers": [
        "Limited access controls",
        "Scalability and cost efficiency",
        "Lack of integrations",
        "High setup cost"
      ]
    },
    {
      "correctAnswer": "Hadoop Distributed File System (HDFS)",
      "question": "What technology did Data Lake 1.0 primarily rely on?",
      "answers": [
        "Apache Flink",
        "MongoDB",
        "Hadoop Distributed File System (HDFS)",
        "MySQL"
      ]
    },
    {
      "correctAnswer": "Store historical, structured data for analysis",
      "question": "What is the primary purpose of a Data Warehouse?",
      "answers": [
        "Stream video content",
        "Store historical, structured data for analysis",
        "Perform transactional updates",
        "Provide real-time chat support"
      ]
    },
    {
      "correctAnswer": "Domain-oriented decentralized teams",
      "question": "How does a Data Mesh approach data ownership?",
      "answers": [
        "Outsourcing to vendors",
        "Centralized IT department",
        "Data silos for privacy",
        "Domain-oriented decentralized teams"
      ]
    },
    {
      "correctAnswer": "Stores raw data in various formats",
      "question": "What is the defining feature of a Data Lake?",
      "answers": [
        "Only stores structured data",
        "Built only on relational databases",
        "Uses only SQL queries",
        "Stores raw data in various formats"
      ]
    },
    {
      "correctAnswer": "Kappa model",
      "question": "Which architectural model reflects treating all data as a real-time stream?",
      "answers": [
        "Micro-batch model",
        "Lambda model",
        "Kappa model",
        "OLAP model"
      ]
    },
    {
      "correctAnswer": "Lack of schema management",
      "question": "What challenge did early data lakes face?",
      "answers": [
        "Overdependence on AI",
        "Too many visualizations",
        "Lack of schema management",
        "High latency in transactional data"
      ]
    },
    {
      "correctAnswer": "ACID compliance with flexible storage",
      "question": "What does a Data Lakehouse integrate?",
      "answers": [
        "ACID compliance with flexible storage",
        "OLTP and OLAP",
        "Raw storage and structured transactions",
        "Data governance with real-time streaming"
      ]
    },
    {
      "correctAnswer": "Modular and cloud-native design",
      "question": "What is the key benefit of a modern data stack?",
      "answers": [
        "Monolithic integration",
        "Fixed software stack",
        "Modular and cloud-native design",
        "Relies solely on local storage"
      ]
    },
    {
      "correctAnswer": "Dataflow model",
      "question": "Which architectural model best supports unifying batch and streaming processing using a single programming model?",
      "answers": [
        "Lambda model",
        "Micro-batch model",
        "Dataflow model",
        "Kappa model"
      ]
    },
    {
      "correctAnswer": "Lambda architecture",
      "question": "Which architecture supports both batch and streaming processing?",
      "answers": [
        "Lambda architecture",
        "Star schema",
        "OLTP model",
        "Snowflake schema"
      ]
    },
    {
      "correctAnswer": "To prepare for and apply business logic before loading data into analytical systems",
      "question": "What is the main purpose of the ETL process in data architectures?",
      "answers": [
        "To load raw data directly into a lake without transformation",
        "To prepare for and apply business logic before loading data into analytical systems",
        "To store data in normalized form for transactional systems",
        "To perform real-time event processing and alerting"
      ]
    },
    {
      "correctAnswer": "Requires managing physical infrastructure on-site",
      "question": "Which of the following best describes an on-premises data warehouse?",
      "answers": [
        "Operates entirely on managed cloud services",
        "Automatically scales with cloud demand",
        "Stores unstructured data in raw format",
        "Requires managing physical infrastructure on-site"
      ]
    },
    {
      "correctAnswer": "Integration of analytics and governance tools",
      "question": "What improvement do next-gen data lakes offer over Data Lake 1.0?",
      "answers": [
        "Integration of analytics and governance tools",
        "Better XML support",
        "Manual schema management",
        "High CPU usage"
      ]
    },
    {
      "correctAnswer": "Cultural shift to domain ownership",
      "question": "What is the biggest challenge in implementing Data Mesh?",
      "answers": [
        "Data duplication",
        "Cost of storage",
        "Security over compliance",
        "Cultural shift to domain ownership"
      ]
    },
    {
      "correctAnswer": "Architecture is leadership",
      "question": "Which principle is violated if an organization enforces one tech for all domains?",
      "answers": [
        "Plan for failure",
        "Always be architecting",
        "Architecture is leadership",
        "Choose common components wisely"
      ]
    },
    {
      "correctAnswer": "Restricts domain-specific flexibility",
      "question": "What is a downside of enforcing common components indiscriminately?",
      "answers": [
        "Restricts domain-specific flexibility",
        "Encourages innovation",
        "Enhances interoperability",
        "Increases team autonomy"
      ]
    },
    {
      "correctAnswer": "Careful evaluation and reversible choices",
      "question": "What characterizes a well-designed architecture in terms of decision-making?",
      "answers": [
        "Irreversible, top-down decisions",
        "Quick wins over long-term impact",
        "Vendor-locked solutions",
        "Careful evaluation and reversible choices"
      ]
    },
    {
      "correctAnswer": "Minimal dependencies for better flexibility",
      "question": "What is emphasized by the principle \"Build loosely coupled systems\"?",
      "answers": [
        "Common error-handling mechanisms",
        "Minimal dependencies for better flexibility",
        "Tight integration of services",
        "High interdependency for better performance"
      ]
    },
    {
      "correctAnswer": "Architecture is leadership – combining technical vision with mentorship",
      "question": "A data engineering team is split between adopting a cutting-edge but unfamiliar tool and sticking with a legacy system. Some team members feel uncertain about the risks and long-term impact. The architect steps in\u2014not to dictate a choice\u2014but to guide the team through trade-off analysis, encourage experimentation, and align the decision with organizational goals. Which principle does this architect's approach best illustrate?",
      "answers": [
        "Always be architecting – to continually revise technology choices",
        "Choose common components wisely – to ensure standardization",
        "Architecture is leadership – combining technical vision with mentorship",
        "Make reversible decisions – to reduce the cost of experimentation"
      ]
    },
    {
      "correctAnswer": "Scale to zero",
      "question": "What term describes the approach of shutting down unused systems to save costs?",
      "answers": [
        "Plan for failure",
        "DataOps",
        "Scale to zero",
        "Architecture is leadership"
      ]
    },
    {
      "correctAnswer": "Enable reversible and flexible decisions",
      "question": "What is the purpose of using \"two-way doors\" in decision-making?",
      "answers": [
        "Avoid failure",
        "Enhance data accuracy",
        "Enable reversible and flexible decisions",
        "Increase system cost"
      ]
    },
    {
      "correctAnswer": "Data Architect",
      "question": "What role should data engineers aspire to?",
      "answers": [
        "UI Designer",
        "Network Administrator",
        "System Analyst",
        "Data Architect"
      ]
    },
    {
      "correctAnswer": "Build loosely coupled systems",
      "question": "Which principle best aligns with microservice-based architecture?",
      "answers": [
        "Choose common components wisely",
        "Make reversible decisions",
        "Build loosely coupled systems",
        "Plan for failure"
      ]
    },
    {
      "correctAnswer": "Technical limit",
      "question": "What type of trade-off involves choosing between latency and reliability?",
      "answers": [
        "Practical constraint",
        "Organizational trade-off",
        "Technical limit",
        "Business goal"
      ]
    },
    {
      "correctAnswer": "Support evolving data needs of an enterprise",
      "question": "What is the main goal of data architecture?",
      "answers": [
        "Speed up network performance",
        "Design user interfaces",
        "Support evolving data needs of an enterprise",
        "Minimize hardware cost"
      ]
    },
    {
      "correctAnswer": "Make reversible decisions",
      "question": "Which principle directly supports agile methodologies in architecture?",
      "answers": [
        "Plan for failure",
        "Build loosely coupled systems",
        "Make reversible decisions",
        "Architecture is leadership"
      ]
    },
    {
      "correctAnswer": "Enterprise architecture",
      "question": "Data architecture is considered a subset of which broader architecture?",
      "answers": [
        "Enterprise architecture",
        "Application architecture",
        "Software architecture",
        "Business architecture"
      ]
    },
    {
      "correctAnswer": "Continuous architectural evaluation and improvement",
      "question": "What does the \"Always be architecting\" principle imply?",
      "answers": [
        "One-time design is enough",
        "Avoid making changes once deployed",
        "Continuous architectural evaluation and improvement",
        "Only architects should make decisions"
      ]
    },
    {
      "correctAnswer": "Plan for failure",
      "question": "Which principle encourages designing systems to tolerate failures?",
      "answers": [
        "Choose common components wisely",
        "Architect for scalability",
        "Always be architecting",
        "Plan for failure"
      ]
    },
    {
      "correctAnswer": "Prioritizes financial accountability in cloud operations",
      "question": "How does \"Embrace FinOps\" influence architectural decisions?",
      "answers": [
        "Reduces security constraints",
        "Encourages overprovisioning",
        "Prioritizes financial accountability in cloud operations",
        "Promotes decentralization"
      ]
    },
    {
      "correctAnswer": "To adapt to changing business and tech needs",
      "question": "Why is flexibility emphasized in data architecture?",
      "answers": [
        "To support batch processing",
        "To adapt to changing business and tech needs",
        "To reduce programming effort",
        "To enhance visualization"
      ]
    },
    {
      "correctAnswer": "Supports flexibility and considers trade-offs in decision-making",
      "question": "Which of the following best describes a key characteristic of good data architecture?",
      "answers": [
        "Is only applicable to small data systems",
        "Focuses solely on hardware design",
        "Supports flexibility and considers trade-offs in decision-making",
        "Makes decisions without evaluating trade-offs"
      ]
    },
    {
      "correctAnswer": "Prioritize security – to ensure compliance and protect sensitive data",
      "question": "A healthcare data platform must comply with strict regulations such as HIPAA. The architecture team is choosing between a fast-to-deploy solution offered by a single vendor and a slightly more complex multi-vendor setup with proven encryption, access control, and audit trail features. Which principle should guide the decision to ensure regulatory compliance and long-term risk mitigation?",
      "answers": [
        "Build loosely coupled systems – to increase integration flexibility",
        "Make reversible decisions – to allow future vendor switching",
        "Embrace FinOps – to reduce upfront cloud costs",
        "Prioritize security – to ensure compliance and protect sensitive data"
      ]
    },
    {
      "correctAnswer": "Through redundancy and recovery planning",
      "question": "How does \"Plan for failure\" improve system reliability?",
      "answers": [
        "By scaling down resources",
        "Through redundancy and recovery planning",
        "By reducing processing time",
        "By encouraging complex dependencies"
      ]
    },
    {
      "correctAnswer": "Use \"scale to zero\" to shut down resources completely when idle",
      "question": "A cloud-based analytics platform experiences irregular workloads, with high activity during business hours and near-zero usage overnight. Which architectural strategy would best support cost efficiency in this scenario?",
      "answers": [
        "Pre-allocate maximum resources to avoid delays",
        "Use \"scale to zero\" to shut down resources completely when idle",
        "Migrate workloads to real-time streaming",
        "Maintain a constant minimal compute baseline"
      ]
    },
    {
      "correctAnswer": "Choose common components wisely",
      "question": "Which principle advocates choosing widely used components?",
      "answers": [
        "Prioritize security",
        "Embrace FinOps",
        "Build loosely coupled systems",
        "Choose common components wisely"
      ]
    },
    {
      "correctAnswer": "Build loosely coupled systems",
      "question": "Which principle's failure would lead to cascading service breakdowns?",
      "answers": [
        "Choose common components wisely",
        "Embrace FinOps",
        "Build loosely coupled systems",
        "Make reversible decisions"
      ]
    },
    {
      "correctAnswer": "Irreversible or expensive to reverse decisions",
      "question": "What is a \"one-way door\" decision in data architecture?",
      "answers": [
        "Temporary workaround",
        "Easily reversible decision",
        "Irreversible or expensive to reverse decisions",
        "A type of data pipeline"
      ]
    },
    {
      "correctAnswer": "A set of systems and processes that move and prepare data across the stages of the data engineering lifecycle",
      "question": "What is a data pipeline?",
      "answers": [
        "A tool used to manage business logic in relational databases",
        "A method for storing large-scale datasets in cloud warehouses",
        "A framework for manually analyzing raw data before ingestion",
        "A set of systems and processes that move and prepare data across the stages of the data engineering lifecycle"
      ]
    },
    {
      "correctAnswer": "Both A and C",
      "question": "Which of the following is an example of a data pipeline?",
      "answers": [
        "A cloud system that pulls data from multiple sources, consolidates it into wide tables, trains ML models, and monitors performance",
        "A series of manual reports built by analysts each month using spreadsheet software",
        "A traditional ETL system that extracts data from on-premises transactional systems, processes it, and loads it into a data warehouse",
        "Both A and C"
      ]
    },
    {
      "correctAnswer": "Data ingestion",
      "question": "What best describes the process of moving data from various sources into a centralized storage system?",
      "answers": [
        "Data ingestion",
        "Data serving",
        "Data transformation",
        "Data generation"
      ]
    },
    {
      "correctAnswer": "Data engineers, business stakeholders, and data architects, so that technical design can be aligned correctly with organizational needs",
      "question": "Who is typically involved in designing a data architecture?",
      "answers": [
        "Only software engineers and data scientists, since data architecture is purely technical",
        "Only data engineers, since data architecture is concerned only with how data flows through systems",
        "Data engineers, business stakeholders, and data architects, so that technical design can be aligned correctly with organizational needs",
        "End users, because they are the ones who consume the reports and dashboards"
      ]
    },
    {
      "correctAnswer": "Make reversible decisions (aka two-way door) to support evolving needs",
      "question": "Which of the following is a core principle of good data architecture?",
      "answers": [
        "Prioritize short-term performance over scalability and flexibility",
        "Make reversible decisions (aka two-way door) to support evolving needs",
        "Build tightly coupled systems to ensure consistent data flow between components",
        "Design systems around one-way door decisions to reduce rework"
      ]
    },
    {
      "correctAnswer": "To manage the flow of data efficiently across the data engineering lifecycle by optimizing storage, access, and transformation",
      "question": "Why is it important for a data engineer to understand the technical details of relational database management systems (RDBS)?",
      "answers": [
        "To design user interfaces that make SQL more accessible to analysts",
        "To optimize report formatting for stakeholders",
        "To manage the flow of data efficiently across the data engineering lifecycle by optimizing storage, access, and transformation",
        "To fully replace the need for a database administrator in operational environments"
      ]
    },
    {
      "correctAnswer": "B & C",
      "question": "Which of the following storage systems accept only structured data?",
      "answers": [
        "Data lake",
        "Data warehouse",
        "RDBS",
        "B & C"
      ]
    },
    {
      "correctAnswer": "Consistency",
      "question": "Which ACID property guarantees that a database remains in a valid state before and after a transaction?",
      "answers": [
        "Atomicity",
        "Consistency",
        "Isolation",
        "Durability"
      ]
    },
    {
      "correctAnswer": "Database",
      "question": "What is a shared collection of related data used to represent real-world entities and support data storage and access?",
      "answers": [
        "Spreadsheet",
        "Database",
        "Dashboard",
        "Report"
      ]
    },
    {
      "correctAnswer": "When building a data warehouse or reporting system where fast query performance is critical",
      "question": "In which of the following scenarios is denormalization most appropriate?",
      "answers": [
        "When minimizing storage space is the top priority",
        "When frequent data updates and inserts are required",
        "When building a data warehouse or reporting system where fast query performance is critical",
        "When enforcing strict data integrity across many related tables"
      ]
    },
    {
      "correctAnswer": "Candidate Key – A potential unique identifier for a record, without referring to other data",
      "question": "Which of the following correctly matches a database key with its function?",
      "answers": [
        "Primary Key – Links one table to another",
        "Foreign Key – Uniquely identifies a record in a table",
        "Candidate Key – A potential unique identifier for a record, without referring to other data",
        "A & B"
      ]
    },
    {
      "correctAnswer": "Adding more machines to distribute the workload across multiple nodes",
      "question": "Which of the following best describes horizontal scalability?",
      "answers": [
        "Increasing the CPU and memory of a single machine",
        "Replacing old servers with newer, faster ones",
        "Adding more machines to distribute the workload across multiple nodes",
        "Optimizing SQL queries to reduce execution time"
      ]
    },
    {
      "correctAnswer": "Scale-to-zero",
      "question": "Which scaling strategy is used to completely release compute resources when a data service is idle, reducing cost to zero?",
      "answers": [
        "Scale-up",
        "Scale-down",
        "Scale-to-zero",
        "Auto-sharding"
      ]
    },
    {
      "correctAnswer": "Self-descriptive",
      "question": "Which of the following is a technical property of a database that refers to storing both data and its metadata together?",
      "answers": [
        "Durable",
        "Indexed",
        "Self-descriptive",
        "Redundant"
      ]
    },
    {
      "correctAnswer": "PostgreSQL",
      "question": "Which of the following is a popular example of a Relational Database Management System (RDBMS)?",
      "answers": [
        "MongoDB",
        "Apache Hadoop",
        "PostgreSQL",
        "Amazon S3"
      ]
    },
    {
      "correctAnswer": "Poor database design and lack of normalization",
      "question": "What is a common cause of data anomalies in a database?",
      "answers": [
        "Using cloud storage instead of local storage",
        "Lack of database indexing",
        "Poor database design and lack of normalization",
        "Using primary keys"
      ]
    },
    {
      "correctAnswer": "True",
      "question": "The data engineering lifecycle (DEL) includes the stages of data generation, storage, ingestion, transformation, and serving, with each stage playing a crucial role in delivering high-quality data for downstream use.",
      "answers": [
        "True",
        "False"
      ]
    },
    {
      "correctAnswer": "True",
      "question": "Data engineers consider the DEL to build the automated systems and scalable infrastructure that enhance the efficiency of data science processes.",
      "answers": [
        "True",
        "False"
      ]
    },
    {
      "correctAnswer": "False",
      "question": "Data architecture focuses solely on the technical design and performance of systems that serve the enterprise's current needs, assuming that the enterprise's needs are fixed.",
      "answers": [
        "True",
        "False"
      ]
    },
    {
      "correctAnswer": "False",
      "question": "OLTP systems are optimized for handling large, complex analytical queries.",
      "answers": [
        "True",
        "False"
      ]
    },
    {
      "correctAnswer": "False",
      "question": "A Relational Database Management System (RDBMS) organizes data in a hierarchical structure and uses procedural programming instead of SQL for data manipulation.",
      "answers": [
        "True",
        "False"
      ]
    },
    {
      "correctAnswer": "False",
      "question": "All databases are designed to only store structured data that is arranged in a predefined schema such as tables with rows and columns.",
      "answers": [
        "True",
        "False"
      ]
    },
    {
      "correctAnswer": "Lock release",
      "question": "What does strict 2PL delay until transaction completion?",
      "answers": [
        "Index creation",
        "Query execution",
        "Lock release",
        "Logging operations"
      ]
    },
    {
      "correctAnswer": "Multiversion concurrency control",
      "question": "What does MVCC stand for?",
      "answers": [
        "Multi-version cached column",
        "Multiversion concurrency control",
        "Multi-variable column comparison",
        "Modular virtual consistency check"
      ]
    },
    {
      "correctAnswer": "Concurrent transaction updates the same data",
      "question": "What causes an unrepeatable read?",
      "answers": [
        "Concurrent transaction updates the same data",
        "Concurrent transactions on separate tables",
        "Timeout errors",
        "Faulty indexing"
      ]
    },
    {
      "correctAnswer": "Stores actual data rows in order",
      "question": "What is a clustered index?",
      "answers": [
        "One that supports multiple columns",
        "Stores actual data rows in order",
        "Optimized for insertions",
        "Index that is stored externally"
      ]
    },
    {
      "correctAnswer": "Online Transaction Processing",
      "question": "What does OLTP stand for?",
      "answers": [
        "Online Ledger Transfer Processing",
        "Online Token Protocol",
        "Offline Transaction Protocol",
        "Online Transaction Processing"
      ]
    },
    {
      "correctAnswer": "Create, Read, Update, Delete",
      "question": "What operations are covered by the CRUD acronym?",
      "answers": [
        "Copy, Replace, Undo, Deliver",
        "Create, Read, Update, Delete",
        "Compute, Run, Upload, Download",
        "Connect, Run, Update, Deactivate"
      ]
    },
    {
      "correctAnswer": "Transaction manager",
      "question": "Which management component controls commit and abort operations in an OLTP system?",
      "answers": [
        "Scheduler",
        "Index manager",
        "Transaction manager",
        "Recovery manager"
      ]
    },
    {
      "correctAnswer": "Atomicity",
      "question": "What OLTP property ensures a system returns to previous state on failure?",
      "answers": [
        "Isolation",
        "Consistency",
        "Durability",
        "Atomicity"
      ]
    },
    {
      "correctAnswer": "Enhances search performance",
      "question": "How does indexing affect OLTP performance?",
      "answers": [
        "Improves GUI speed",
        "Increases insertion speed",
        "Reduces security risk",
        "Enhances search performance"
      ]
    },
    {
      "correctAnswer": "Avoids blocking between readers and writers",
      "question": "What makes MVCC preferable in high-concurrency environments?",
      "answers": [
        "Avoids blocking between readers and writers",
        "Prevents all possible deadlocks",
        "Reduces indexing overhead",
        "Simplifies query syntax"
      ]
    },
    {
      "correctAnswer": "Wait-die and wound-wait",
      "question": "Which protocol helps prevent deadlocks in 2PL?",
      "answers": [
        "Write-ahead logging",
        "Wait-die and wound-wait",
        "Rollback-only mode",
        "Session pinning"
      ]
    },
    {
      "correctAnswer": "Joins",
      "question": "What does a foreign key index support?",
      "answers": [
        "OLAP",
        "Logging",
        "Joins",
        "Encryption"
      ]
    },
    {
      "correctAnswer": "Uses leaf nodes for data pointers",
      "question": "How do B+ Trees optimize performance?",
      "answers": [
        "Sorts columns alphabetically",
        "Stores all values in internal nodes",
        "Uses leaf nodes for data pointers",
        "Bypasses cache memory"
      ]
    },
    {
      "correctAnswer": "Conflicts from multiple transactions",
      "question": "What issue does concurrency control aim to resolve?",
      "answers": [
        "Indexing errors",
        "Query latency",
        "Backup scheduling",
        "Conflicts from multiple transactions"
      ]
    },
    {
      "correctAnswer": "An index that spans multiple columns in a defined order",
      "question": "In indexing, what is a composite index?",
      "answers": [
        "A full-text index used for string search",
        "An index created on normalized tables only",
        "An index that spans multiple columns in a defined order",
        "A collection of individual indexes merged at runtime"
      ]
    },
    {
      "correctAnswer": "Two-phase locking (2PL)",
      "question": "Which technique ensures serializability but may cause deadlocks?",
      "answers": [
        "Two-phase locking (2PL)",
        "Write-ahead logging",
        "Multiversion concurrency control",
        "Timestamp ordering"
      ]
    },
    {
      "correctAnswer": "Faster reads vs slower writes",
      "question": "What is the trade-off when maintaining indexes in OLTP?",
      "answers": [
        "Higher accuracy vs lower security",
        "Batch vs real-time processing",
        "Faster reads vs slower writes",
        "Increased storage vs reduced CPU usage"
      ]
    },
    {
      "correctAnswer": "A set of database properties ensuring reliable transactions",
      "question": "What is ACID compliance in OLTP?",
      "answers": [
        "A pricing model",
        "A user interface requirement",
        "A set of database properties ensuring reliable transactions",
        "A data visualization standard"
      ]
    },
    {
      "correctAnswer": "Cache data to reduce disk reads",
      "question": "What is the function of a buffer manager in OLTP?",
      "answers": [
        "Perform ETL operations",
        "Cache data to reduce disk reads",
        "Encrypt user data",
        "Manage database schema"
      ]
    },
    {
      "correctAnswer": "Restores consistent state after failure using transaction logs",
      "question": "What is a key role of the recovery manager in OLTP?",
      "answers": [
        "Performs crash snapshot rollback",
        "Reverts user input during transaction retries",
        "Restores consistent state after failure using transaction logs",
        "Schedules deferred transaction resolution"
      ]
    },
    {
      "correctAnswer": "Real-time, short transactions",
      "question": "Which of the following is a characteristic of OLTP systems?",
      "answers": [
        "High latency",
        "Real-time, short transactions",
        "Batch updates",
        "Data summarization"
      ]
    },
    {
      "correctAnswer": "New records appear during a transaction",
      "question": "What is a phantom read?",
      "answers": [
        "A data leak from logs",
        "An error caused by index corruption",
        "New records appear during a transaction",
        "A transaction that deletes itself"
      ]
    },
    {
      "correctAnswer": "Reading uncommitted data",
      "question": "What causes a \"dirty read\"?",
      "answers": [
        "Reading uncommitted data",
        "Missing indexes",
        "Full table scans",
        "Incorrect foreign keys"
      ]
    },
    {
      "correctAnswer": "B+ Tree index",
      "question": "What indexing technique is ideal for range queries?",
      "answers": [
        "Primary key index",
        "Composite index",
        "B+ Tree index",
        "Hash index"
      ]
    }
  ]
}