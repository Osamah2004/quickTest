{
    "questions": [
        {
            "correctAnswer": "True",
            "question": "True or False: The role of a software architect includes making key technical decisions.",
            "answers": [
                "True",
                "False"
            ]
        },
        {
            "correctAnswer": "Architect",
            "question": "Which of the following stakeholders is primarily responsible for creating and assessing the architecture?",
            "answers": [
                "Developer",
                "Tester",
                "Architect",
                "Client"
            ]
        },
        {
            "correctAnswer": "False",
            "question": "True or False: Software architecture is primarily concerned with low-level code implementation.",
            "answers": [
                "True",
                "False"
            ]
        },
        {
            "correctAnswer": "Many stakeholders involved",
            "question": "Which characteristic of software architecture highlights that it balances both functional and quality requirements?",
            "answers": [
                "Many stakeholders involved",
                "Inhibits quality attributes",
                "Only developers are involved",
                "Emphasizes coding standards"
            ]
        },
        {
            "correctAnswer": "Communication with stakeholders",
            "question": "Why is architecture important in the software development lifecycle?",
            "answers": [
                "It helps in coding faster",
                "It establishes communication with stakeholders",
                "It is unnecessary",
                "It reduces testing time"
            ]
        },
        {
            "correctAnswer": "False",
            "question": "True or False: Software architecture is not concerned with communication between sub-systems.",
            "answers": [
                "True",
                "False"
            ]
        },
        {
            "correctAnswer": "Quality attributes",
            "question": "In software architecture, which of the following can be either enabled or inhibited by the design decisions?",
            "answers": [
                "Testing efficiency",
                "Deployment processes",
                "Quality attributes",
                "System speed"
            ]
        },
        {
            "correctAnswer": "True",
            "question": "True or False: The design of a system's architecture can influence its maintainability.",
            "answers": [
                "True",
                "False"
            ]
        },
        {
            "correctAnswer": "Functional and quality requirements",
            "question": "In software architecture, what must be balanced during the design process?",
            "answers": [
                "Functional and quality requirements",
                "Speed and coding style",
                "Testing and development timelines",
                "Team size and project scope"
            ]
        },
        {
            "correctAnswer": "Architectural design",
            "question": "What is the design process for identifying sub-systems and their communication frameworks called?",
            "answers": [
                "Coding guidelines",
                "Architectural design",
                "Testing strategy",
                "System integration"
            ]
        },
        {
            "correctAnswer": "True",
            "question": "True or False: The role of the architect includes visualizing solutions and evaluating requirements.",
            "answers": [
                "True",
                "False"
            ]
        },
        {
            "correctAnswer": "Module views",
            "question": "Which type of view is primarily concerned with decomposition and the relationships between modules?",
            "answers": [
                "Deployment views",
                "Module views",
                "Process views",
                "Logical views"
            ]
        },
        {
            "correctAnswer": "False",
            "question": "True or False: Architecture assessment occurs after the system has been fully implemented.",
            "answers": [
                "True",
                "False"
            ]
        },
        {
            "correctAnswer": "Viewpoint",
            "question": "What term refers to the perspective or technique used to construct a view?",
            "answers": [
                "Scenario",
                "Module",
                "Viewpoint",
                "Connector"
            ]
        },
        {
            "correctAnswer": "False",
            "question": "True or False: The deployment viewpoint focuses on the organization of software modules in the development environment.",
            "answers": [
                "True",
                "False"
            ]
        },
        {
            "correctAnswer": "Logical viewpoint",
            "question": "Which viewpoint is concerned with the system's functional requirements and key abstractions?",
            "answers": [
                "Logical viewpoint",
                "Process viewpoint",
                "Deployment viewpoint",
                "Scenario viewpoint"
            ]
        },
        {
            "correctAnswer": "True",
            "question": "True or False: The process viewpoint addresses concurrent aspects of the system at runtime.",
            "answers": [
                "True",
                "False"
            ]
        },
        {
            "correctAnswer": "Client-server pattern",
            "question": "Which architectural pattern divides the system into clients that request services and servers that provide them?",
            "answers": [
                "Pipe-and-filter pattern",
                "Client-server pattern",
                "Layered architecture",
                "Main-program-with-subroutines"
            ]
        },
        {
            "correctAnswer": "True",
            "question": "True or False: The business viewpoint addresses concerns such as profitability and market trends.",
            "answers": [
                "True",
                "False"
            ]
        },
        {
            "correctAnswer": "Scenario viewpoint",
            "question": "Which viewpoint shows how different system elements work together using important use cases?",
            "answers": [
                "Logical viewpoint",
                "Process viewpoint",
                "Scenario viewpoint",
                "Deployment viewpoint"
            ]
        },
        {
            "correctAnswer": "Scalability and performance",
            "question": "What nonfunctional requirements are considered in the process viewpoint?",
            "answers": [
                "Scalability and performance",
                "Security and flexibility",
                "Usability and accessibility",
                "Cost and time"
            ]
        },
        {
            "correctAnswer": "True",
            "question": "True or False: The allocation view in software architecture includes work assignment and deployment considerations.",
            "answers": [
                "True",
                "False"
            ]
        },
        {
            "correctAnswer": "Main-program-with-subroutines",
            "question": "Which architectural style uses a hierarchical structure with a single thread of control?",
            "answers": [
                "Client-server",
                "Layered architecture",
                "Main-program-with-subroutines",
                "Abstract-data-type"
            ]
        },
        {
            "correctAnswer": "True",
            "question": "True or False: Architectural styles define the components and connectors used in the system and their interactions.",
            "answers": [
                "True",
                "False"
            ]
        },
        {
            "correctAnswer": "Pipes-and-filters",
            "question": "Which architectural style involves transforming data through a series of sequential steps?",
            "answers": [
                "Pipes-and-filters",
                "Client-server",
                "Repository",
                "Layered architecture"
            ]
        },
        {
            "correctAnswer": "Implicit invocation",
            "question": "In which architectural style are components loosely coupled and invoked based on events?",
            "answers": [
                "Main-program-with-subroutines",
                "Repository",
                "Implicit invocation",
                "Client-server"
            ]
        },
        {
            "correctAnswer": "True",
            "question": "True or False: The repository architectural style centralizes information to be accessed and manipulated by multiple clients.",
            "answers": [
                "True",
                "False"
            ]
        },
        {
            "correctAnswer": "Layered architecture",
            "question": "Which architectural style uses a hierarchy of layers with limited visibility between them?",
            "answers": [
                "Layered architecture",
                "Pipes-and-filters",
                "Abstract-data-type",
                "Client-server"
            ]
        },
        {
            "correctAnswer": "Model-View-Controller (MVC)",
            "question": "Which architectural style separates the user interface from the business logic?",
            "answers": [
                "Repository",
                "Model-View-Controller (MVC)",
                "Pipes-and-filters",
                "Main-program-with-subroutines"
            ]
        },
        {
            "correctAnswer": "True",
            "question": "True or False: The business logic in the MVC architectural style is separated from the user interface for flexibility.",
            "answers": [
                "True",
                "False"
            ]
        },
        {
            "correctAnswer": "False",
            "question": "True or False: The repository architectural style is designed for systems where data is only stored temporarily.",
            "answers": [
                "True",
                "False"
            ]
        }
    ]
}
